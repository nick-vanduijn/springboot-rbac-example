<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.example.rbac.unit.UserServiceTest" time="5.637" tests="8" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/nick/Developer/spring-rbac-example/spring-rbac-api/target/test-classes:/Users/nick/Developer/spring-rbac-example/spring-rbac-api/target/classes:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.5/spring-boot-starter-web-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.5/spring-boot-starter-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.5/spring-boot-starter-logging-3.1.5.jar:/Users/nick/.m2/repository/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/Users/nick/.m2/repository/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/Users/nick/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/Users/nick/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/Users/nick/.m2/repository/org/slf4j/jul-to-slf4j/2.0.9/jul-to-slf4j-2.0.9.jar:/Users/nick/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/nick/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.5/spring-boot-starter-json-3.1.5.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.5/spring-boot-starter-tomcat-3.1.5.jar:/Users/nick/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.15/tomcat-embed-core-10.1.15.jar:/Users/nick/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.15/tomcat-embed-websocket-10.1.15.jar:/Users/nick/.m2/repository/org/springframework/spring-web/6.0.13/spring-web-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-beans/6.0.13/spring-beans-6.0.13.jar:/Users/nick/.m2/repository/io/micrometer/micrometer-observation/1.11.5/micrometer-observation-1.11.5.jar:/Users/nick/.m2/repository/io/micrometer/micrometer-commons/1.11.5/micrometer-commons-1.11.5.jar:/Users/nick/.m2/repository/org/springframework/spring-webmvc/6.0.13/spring-webmvc-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-context/6.0.13/spring-context-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-expression/6.0.13/spring-expression-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.5/spring-boot-starter-security-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/spring-aop/6.0.13/spring-aop-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/security/spring-security-config/6.1.5/spring-security-config-6.1.5.jar:/Users/nick/.m2/repository/org/springframework/security/spring-security-web/6.1.5/spring-security-web-6.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.5/spring-boot-starter-data-jpa-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.5/spring-boot-starter-jdbc-3.1.5.jar:/Users/nick/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/nick/.m2/repository/org/springframework/spring-jdbc/6.0.13/spring-jdbc-6.0.13.jar:/Users/nick/.m2/repository/org/hibernate/orm/hibernate-core/6.2.13.Final/hibernate-core-6.2.13.Final.jar:/Users/nick/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/nick/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/nick/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/nick/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/nick/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/nick/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/nick/.m2/repository/net/bytebuddy/byte-buddy/1.14.9/byte-buddy-1.14.9.jar:/Users/nick/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/Users/nick/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/Users/nick/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/nick/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/Users/nick/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/nick/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/nick/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/nick/.m2/repository/org/springframework/data/spring-data-jpa/3.1.5/spring-data-jpa-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/data/spring-data-commons/3.1.5/spring-data-commons-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/spring-orm/6.0.13/spring-orm-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-tx/6.0.13/spring-tx-6.0.13.jar:/Users/nick/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/Users/nick/.m2/repository/org/springframework/spring-aspects/6.0.13/spring-aspects-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.5/spring-boot-starter-validation-3.1.5.jar:/Users/nick/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.15/tomcat-embed-el-10.1.15.jar:/Users/nick/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/nick/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.5/spring-boot-starter-aop-3.1.5.jar:/Users/nick/.m2/repository/org/aspectj/aspectjweaver/1.9.20/aspectjweaver-1.9.20.jar:/Users/nick/.m2/repository/io/jsonwebtoken/jjwt-api/0.12.3/jjwt-api-0.12.3.jar:/Users/nick/.m2/repository/io/jsonwebtoken/jjwt-impl/0.12.3/jjwt-impl-0.12.3.jar:/Users/nick/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.12.3/jjwt-jackson-0.12.3.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/Users/nick/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-devtools/3.1.5/spring-boot-devtools-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot/3.1.5/spring-boot-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.5/spring-boot-autoconfigure-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.5/spring-boot-starter-test-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-test/3.1.5/spring-boot-test-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.5/spring-boot-test-autoconfigure-3.1.5.jar:/Users/nick/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/nick/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/nick/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/nick/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/Users/nick/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/Users/nick/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/nick/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/nick/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/nick/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/Users/nick/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/nick/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/nick/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/nick/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/nick/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/nick/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/nick/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/Users/nick/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/Users/nick/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.9/byte-buddy-agent-1.14.9.jar:/Users/nick/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/nick/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/Users/nick/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/nick/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/nick/.m2/repository/org/springframework/spring-core/6.0.13/spring-core-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-jcl/6.0.13/spring-jcl-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-test/6.0.13/spring-test-6.0.13.jar:/Users/nick/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/nick/.m2/repository/org/springframework/security/spring-security-test/6.1.5/spring-security-test-6.1.5.jar:/Users/nick/.m2/repository/org/springframework/security/spring-security-core/6.1.5/spring-security-core-6.1.5.jar:/Users/nick/.m2/repository/org/springframework/security/spring-security-crypto/6.1.5/spring-security-crypto-6.1.5.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="Europe/Amsterdam"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="NL"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/24.0.1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/nick/Developer/spring-rbac-example/spring-rbac-api/target/surefire/surefirebooter-20250830221410620_3.jar /Users/nick/Developer/spring-rbac-example/spring-rbac-api/target/surefire 2025-08-30T22-14-10_572-jvmRun1 surefire-20250830221410620_1tmp surefire_0-20250830221410620_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/nick/Developer/spring-rbac-example/spring-rbac-api/target/test-classes:/Users/nick/Developer/spring-rbac-example/spring-rbac-api/target/classes:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.5/spring-boot-starter-web-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.5/spring-boot-starter-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.5/spring-boot-starter-logging-3.1.5.jar:/Users/nick/.m2/repository/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/Users/nick/.m2/repository/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/Users/nick/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/Users/nick/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/Users/nick/.m2/repository/org/slf4j/jul-to-slf4j/2.0.9/jul-to-slf4j-2.0.9.jar:/Users/nick/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/nick/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.5/spring-boot-starter-json-3.1.5.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.5/spring-boot-starter-tomcat-3.1.5.jar:/Users/nick/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.15/tomcat-embed-core-10.1.15.jar:/Users/nick/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.15/tomcat-embed-websocket-10.1.15.jar:/Users/nick/.m2/repository/org/springframework/spring-web/6.0.13/spring-web-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-beans/6.0.13/spring-beans-6.0.13.jar:/Users/nick/.m2/repository/io/micrometer/micrometer-observation/1.11.5/micrometer-observation-1.11.5.jar:/Users/nick/.m2/repository/io/micrometer/micrometer-commons/1.11.5/micrometer-commons-1.11.5.jar:/Users/nick/.m2/repository/org/springframework/spring-webmvc/6.0.13/spring-webmvc-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-context/6.0.13/spring-context-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-expression/6.0.13/spring-expression-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.5/spring-boot-starter-security-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/spring-aop/6.0.13/spring-aop-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/security/spring-security-config/6.1.5/spring-security-config-6.1.5.jar:/Users/nick/.m2/repository/org/springframework/security/spring-security-web/6.1.5/spring-security-web-6.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.5/spring-boot-starter-data-jpa-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.5/spring-boot-starter-jdbc-3.1.5.jar:/Users/nick/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/nick/.m2/repository/org/springframework/spring-jdbc/6.0.13/spring-jdbc-6.0.13.jar:/Users/nick/.m2/repository/org/hibernate/orm/hibernate-core/6.2.13.Final/hibernate-core-6.2.13.Final.jar:/Users/nick/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/nick/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/nick/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/nick/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/nick/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/nick/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/nick/.m2/repository/net/bytebuddy/byte-buddy/1.14.9/byte-buddy-1.14.9.jar:/Users/nick/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/Users/nick/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/Users/nick/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/nick/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/Users/nick/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/nick/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/nick/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/nick/.m2/repository/org/springframework/data/spring-data-jpa/3.1.5/spring-data-jpa-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/data/spring-data-commons/3.1.5/spring-data-commons-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/spring-orm/6.0.13/spring-orm-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-tx/6.0.13/spring-tx-6.0.13.jar:/Users/nick/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/Users/nick/.m2/repository/org/springframework/spring-aspects/6.0.13/spring-aspects-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.5/spring-boot-starter-validation-3.1.5.jar:/Users/nick/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.15/tomcat-embed-el-10.1.15.jar:/Users/nick/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/nick/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.5/spring-boot-starter-aop-3.1.5.jar:/Users/nick/.m2/repository/org/aspectj/aspectjweaver/1.9.20/aspectjweaver-1.9.20.jar:/Users/nick/.m2/repository/io/jsonwebtoken/jjwt-api/0.12.3/jjwt-api-0.12.3.jar:/Users/nick/.m2/repository/io/jsonwebtoken/jjwt-impl/0.12.3/jjwt-impl-0.12.3.jar:/Users/nick/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.12.3/jjwt-jackson-0.12.3.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/Users/nick/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/Users/nick/.m2/repository/com/h2database/h2/2.1.214/h2-2.1.214.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-devtools/3.1.5/spring-boot-devtools-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot/3.1.5/spring-boot-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.5/spring-boot-autoconfigure-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.5/spring-boot-starter-test-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-test/3.1.5/spring-boot-test-3.1.5.jar:/Users/nick/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.5/spring-boot-test-autoconfigure-3.1.5.jar:/Users/nick/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/nick/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/nick/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/nick/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/Users/nick/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/Users/nick/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/nick/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/nick/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/nick/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/Users/nick/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/nick/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/nick/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/nick/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/nick/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/nick/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/nick/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/Users/nick/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/Users/nick/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.9/byte-buddy-agent-1.14.9.jar:/Users/nick/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/nick/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/Users/nick/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/nick/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/nick/.m2/repository/org/springframework/spring-core/6.0.13/spring-core-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-jcl/6.0.13/spring-jcl-6.0.13.jar:/Users/nick/.m2/repository/org/springframework/spring-test/6.0.13/spring-test-6.0.13.jar:/Users/nick/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/nick/.m2/repository/org/springframework/security/spring-security-test/6.1.5/spring-security-test-6.1.5.jar:/Users/nick/.m2/repository/org/springframework/security/spring-security-core/6.1.5/spring-security-core-6.1.5.jar:/Users/nick/.m2/repository/org/springframework/security/spring-security-crypto/6.1.5/spring-security-crypto-6.1.5.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/nick"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/24.0.1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/nick/Developer/spring-rbac-example/spring-rbac-api"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/nick/Developer/spring-rbac-example/spring-rbac-api/target/surefire/surefirebooter-20250830221410620_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="24.0.1"/>
    <property name="user.name" value="nick"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.3.2"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/nick/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/2m/gnm2zx4x3vg9_fp2gh1p55mm0000gn/T/"/>
    <property name="java.version" value="24.0.1"/>
    <property name="user.dir" value="/Users/nick/Developer/spring-rbac-example/spring-rbac-api"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="14638"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/nick/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="24.0.1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="68.0"/>
  </properties>
  <testcase name="shouldLoadUserWithCorrectAuthorities" classname="com.example.rbac.unit.UserServiceTest" time="0.795">
    <system-out><![CDATA[22:14:11.312 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.rbac.SpringRbacApiApplication for test class com.example.rbac.unit.UserServiceTest
22:14:11.366 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener -- Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
&amp#27;[32m :: Spring Boot :: &amp#27;[39m              &amp#27;[2m (v3.1.5)&amp#27;[0;39m

&amp#27;[2m2025-08-30T22:14:11.589+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mcom.example.rbac.unit.UserServiceTest   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Starting UserServiceTest using Java 24.0.1 with PID 14638 (started by nick in /Users/nick/Developer/spring-rbac-example/spring-rbac-api)
&amp#27;[2m2025-08-30T22:14:11.590+02:00&amp#27;[0;39m &amp#27;[32mDEBUG&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mcom.example.rbac.unit.UserServiceTest   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Running with Spring Boot v3.1.5, Spring v6.0.13
&amp#27;[2m2025-08-30T22:14:11.590+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mcom.example.rbac.unit.UserServiceTest   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m No active profile set, falling back to 1 default profile: "default"
&amp#27;[2m2025-08-30T22:14:11.861+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36m.s.d.r.c.RepositoryConfigurationDelegate&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
&amp#27;[2m2025-08-30T22:14:11.901+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36m.s.d.r.c.RepositoryConfigurationDelegate&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Finished Spring Data repository scanning in 34 ms. Found 3 JPA repository interfaces.
&amp#27;[2m2025-08-30T22:14:11.941+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mbeddedDataSourceBeanFactoryPostProcessor&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Replacing 'dataSource' DataSource bean with embedded version
&amp#27;[2m2025-08-30T22:14:12.077+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.j.d.e.EmbeddedDatabaseFactory       &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Starting embedded database: url='jdbc:h2:mem:81fe6c14-1c05-4bcd-a7c1-0d8c83472b52;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
&amp#27;[2m2025-08-30T22:14:12.376+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.hibernate.jpa.internal.util.LogHelper &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
&amp#27;[2m2025-08-30T22:14:12.414+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.Version                   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000412: Hibernate ORM core version 6.2.13.Final
&amp#27;[2m2025-08-30T22:14:12.416+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.cfg.Environment           &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000406: Using bytecode reflection optimizer
&amp#27;[2m2025-08-30T22:14:12.598+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.o.j.p.SpringPersistenceUnitInfo     &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
&amp#27;[2m2025-08-30T22:14:12.624+02:00&amp#27;[0;39m &amp#27;[33m WARN&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36morg.hibernate.orm.deprecation           &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
&amp#27;[2m2025-08-30T22:14:13.091+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.h.e.t.j.p.i.JtaPlatformInitiator      &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists audit_events cascade 
Hibernate: 
    drop table if exists roles cascade 
Hibernate: 
    drop table if exists user_roles cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table audit_events (
        id bigint generated by default as identity,
        resource_id bigint,
        timestamp timestamp(6) not null,
        status varchar(20),
        ip_address varchar(45),
        event_type varchar(50) not null,
        resource_type varchar(50),
        action varchar(100) not null,
        username varchar(100),
        details varchar(500),
        user_agent varchar(500),
        primary key (id)
    )
Hibernate: 
    create table roles (
        id bigint generated by default as identity,
        name varchar(50) not null unique,
        description varchar(255),
        primary key (id)
    )
Hibernate: 
    create table user_roles (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    )
Hibernate: 
    create table users (
        account_non_expired boolean not null,
        account_non_locked boolean not null,
        credentials_non_expired boolean not null,
        enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6),
        username varchar(50) not null unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    alter table if exists user_roles 
       add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 
       foreign key (role_id) 
       references roles
Hibernate: 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
&amp#27;[2m2025-08-30T22:14:13.116+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mj.LocalContainerEntityManagerFactoryBean&amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
Hibernate: 
    select
        r1_0.id 
    from
        roles r1_0 
    where
        r1_0.name=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id 
    from
        roles r1_0 
    where
        r1_0.name=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
&amp#27;[2m2025-08-30T22:14:13.510+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mo.s.d.j.r.query.QueryEnhancerFactory    &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Hibernate is in classpath; If applicable, HQL parser will be used.
&amp#27;[2m2025-08-30T22:14:13.851+02:00&amp#27;[0;39m &amp#27;[32m INFO&amp#27;[0;39m &amp#27;[35m14638&amp#27;[0;39m &amp#27;[2m---&amp#27;[0;39m &amp#27;[2m[           main]&amp#27;[0;39m &amp#27;[36mcom.example.rbac.unit.UserServiceTest   &amp#27;[0;39m &amp#27;[2m:&amp#27;[0;39m Started UserServiceTest in 2.49 seconds (process running for 3.157)
Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
]]></system-out>
    <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (/Users/nick/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.9/byte-buddy-agent-1.14.9.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
  <testcase name="shouldLoadModeratorWithCorrectAuthorities" classname="com.example.rbac.unit.UserServiceTest" time="0.259">
    <system-out><![CDATA[Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
]]></system-out>
  </testcase>
  <testcase name="shouldCreateUserWithEncryptedPassword" classname="com.example.rbac.unit.UserServiceTest" time="0.439">
    <system-out><![CDATA[Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
]]></system-out>
  </testcase>
  <testcase name="shouldCheckUserHasAnyRole" classname="com.example.rbac.unit.UserServiceTest" time="0.381">
    <system-out><![CDATA[Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
]]></system-out>
  </testcase>
  <testcase name="shouldLoadRegularUserWithLimitedAuthorities" classname="com.example.rbac.unit.UserServiceTest" time="0.246">
    <system-out><![CDATA[Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
]]></system-out>
  </testcase>
  <testcase name="shouldThrowExceptionForNonExistentUser" classname="com.example.rbac.unit.UserServiceTest" time="0.24">
    <system-out><![CDATA[Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
]]></system-out>
  </testcase>
  <testcase name="shouldCheckUserHasRole" classname="com.example.rbac.unit.UserServiceTest" time="0.241">
    <system-out><![CDATA[Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
]]></system-out>
  </testcase>
  <testcase name="shouldLoadUserByUsernameSuccessfully" classname="com.example.rbac.unit.UserServiceTest" time="0.242">
    <system-out><![CDATA[Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    delete 
    from
        roles 
    where
        id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        r1_0.id,
        r1_0.description,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
Hibernate: 
    insert 
    into
        roles
        (description,name,id) 
    values
        (?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (account_non_expired,account_non_locked,created_at,credentials_non_expired,email,enabled,password,updated_at,username,id) 
    values
        (?,?,?,?,?,?,?,?,?,default)
Hibernate: 
    select
        u1_0.id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
]]></system-out>
  </testcase>
</testsuite>